*	rename registers according to word size

	target = host(0)
	target break('_') . os "_" rem . ws

	prefix = (eq(ws,32) '%e', '%r')

	word = (eq(ws,32) 'dword','qword')
	defines = 'M_WORD ' word ' '
	defines = defines 'D_WORD' ' ' 	(eq(ws,32) '.long',	'.quad') ' '
	defines = defines 'CFP_B'  ' ' 	(eq(ws,32) '4',		'8') ' '

	define('a(ref)')			:(a.end)
						:(next)
a	ident(os,"osx")				:s(a.err)
	a = '[' ref ']' 			:(return)
a.end

	define('m(ref)')			:(m.end)
m	ident(os,"osx")				:s(m.err)
	m = (eq(ws,32) 'd', 'q') 'word ptr ' ref ']' :(return)
m.end

	lmap = table(4)
	s = 'W0_L %al WA_L %cl WB_L %bl WC_L %dl '
linit	s break(' ') . reg ' ' break(' ') . low ' '  = 		:f(ldone)
	lmap[reg] = low				:(linit)
ldone

	rmap = table(20)

	s = 'XL si XR di XS sp XT si WA cx WB bx WC dx W0 ax IA bp '
rinit	s break(' ') . min ' ' break(' ') . reg ' '  = 		:f(rdone)
	rmap[min] = reg				:(rinit)
rdone



	rpat =  'IA' | ('X' any('LRST')) | ('W' any('ABC0')) 

	lpat = 'W' any('0ABC') '_L'

						:(next)
copy
	output = line
next
	line = input				:f(end)
*	change nasm-style comments into gas format
	line tab(0) ';' = '#' 			:s(copy)
	

aloop	line breakx('A') . first 'A(' bal . ref ')' rem . last = first a(ref) last	:s(mloop)
	defs = defines

dloop
	defs break(' ') . key ' ' break(' ') . val ' ' =	:f(mloop)
dloop.1	line key = val				:s(dloop.1)f(dloop)

mloop	line breakx('M') . first 'M(' bal . ref ')' rem . last = first m(ref) last	:s(mloop)

rloop 	line rpat . reg = prefix rmap[reg]	:s(rloop)

lloop 	line lpat . reg  = lmap[reg]		:s(lloop)

	output = line				:(next)
err	output = 'error '
end
