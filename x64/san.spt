* normalze assembler file 
	&stlimit = 7000000
	TAB = char(9)
	define('diclist()')
	listdict = 0
	ZZZON = 0
	:(loop)
copy
	line = trim(line)
	output = differ(line) line
loop
	line = input	:f(end)
*	ne(listdict) diclist()
	listdict = 0
	&ANCHOR = 1
	listdict = IDENT(substr(line,1,6),'START:') 1
 	line '#'	:s(loop)
 	line ';'	:s(loop)
	line = trim(line)
 	ident(line)		:s(loop)
	line '.eject'		:s(loop)
	line '.sbttl'		:s(loop)
*	line ':near' = 
	&ANCHOR = 0
*	output = 'pre ' line
	preline = line
	line 'D_ALIGN_' = 'align'
	line 'D_ASCII_' = 'db'
	line 'D_DB_' = 'db'
	line 'D_DD_' = 'dd'
	line 'D_DOUBLE_' = 'dd'
	line 'D_DW_' = 'dw'
 	line 'D_EXTERN_' = 'extern'
 	line 'D_FILL_' = 'PRC_: times 19 dd 0'
 	line 'D_GLOBAL_' = 'global'
 	line 'D_INCLUDE_' = '%include'
 	line 'D_INCLUDE_SYSTYPE_' = '  %include "systype.nh"'
	line 'D_SECTION_DATA_' = 'section .data'
	line 'D_SECTION_TEXT_' = 'section .text'
	line 'D_SHORT_' = 'short'
	line 'D_EQU_' = ' EQU '
loop.0
	line  'D_OFFSET_('  BREAK(')') . arg1 ')' =	 arg1  :s(loop.0)

	line  'BYTE_PTR('  BREAK(')') . arg1 ')' = 'BYTE ['  arg1 ']'   :s(loop.0)		
	line 'DWORD_PTR('  BREAK(')') . arg1 ')'  = 'DWORD [' arg1 ']'  :s(loop.0)
	

	line 'WORD_PTR('  BREAK(')') . arg1 ')'  = 'WORD [' arg1 ']'   :s(loop.0)


	line  'DWORD_PTR2('  BREAK(',') . arg1 ',' 
+	BREAK(')') . arg2 ')'   = 'DWORD [' arg1 '+' arg2 ']'  :s(loop.0)


* look for label to enable ZZZ trace
	&ANCHOR = 1
 	ZZZON = IDENT(line, 'RELAJ:') 1
*	ZZZON = IDENT(line, 'START:') 1
	ZZZON = IDENT(line,'Z-')	0
	IDENT(line,'Z-')	:s(loop)
	ZZZON = IDENT(line,'Z+')	1
	IDENT(line,'Z+')	:s(loop)
	EQ(ZZZON)	:s(copy)
*    :(copy)
* only trace statements with labels
        first = substr(line,1,1)
 	LNE(first,' ')		:s(label)f(copy)

	label = 
	line ? span(' ' tab) . first rem . rest
					:(zzz)

label
	LEQ(SUBSTR(LINE,SIZE(line),1),':') :f(text)
	label = SUBSTR(line,1,SIZE(line) - 1)
	rest =
					:(zzz)
text
	label = 
	line  ? break(':') . label ':' span(' ')  rem . rest
					:(zzz)
zzz
	ZZZCOUNT = ZZZCOUNT + 1
	output = differ(label) label ':'
	label =
	output = TAB 'ZZZ' TAB  ZZZCOUNT 
	output = DIFFER(rest) TAB  rest
	rest = 
					:(loop)
diclist
	output = '; diclist'
	output = '; ' line
	input(.dfile,3,'v38.dic') :f(end)
d.loop
	dline = dfile	:f(return)
	output = TAB 'ZZZ' TAB '0'
	output = TAB 'MOV' TAB 'EAX,' 
+		 SUBSTR(dline,1,5) :(d.loop)
end
