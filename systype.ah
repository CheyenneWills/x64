; Copyright 1987-2012 Robert B. K. Dewar and Mark Emmer.
; 
; This file is part of Macro SPITBOL.
; 
;     Macro SPITBOL is free software: you can redistribute it and/or modify
;     it under the terms of the GNU General Public License as published by
;     the Free Software Foundation, either version 3 of the License, or
;     (at your option) any later version.
; 
;     Macro SPITBOL is distributed in the hope that it will be useful,
;     but WITHOUT ANY WARRANTY; without even the implied warranty of
;     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;     GNU General Public License for more details.
; 
;     You should have received a copy of the GNU General Public License
;     along with Macro SPITBOL.  If not, see <http://www.gnu.org/licenses/>.

; configuration information for inter.s
;
%ifndef linux
%define linux 1
%endif
%ifndef winnt
%define winnt	0
%endif
%define _MASM_ 0

; Structure definition macros
;

; define how data locations in the Minimal code are accessed from
; assembly-language and C routines.  "direct" is non-zero to make
; the symbols public for direct access, zero to have access via
; a table of pointers and the minadr procedure.
;
%define direct 1

; define how floating point results are returned from a function
; (either in ST(0) or in EDX:EAX.

%define fretst0 1
%define freteax 0


; Call C function.  Intel follows standard C conventions, and
; caller pops arguments.
%ifdef callc
karin shields
%endif
%ifnmacro callc
%macro  callc 2
        call    %1
%if  	%2
        add     esp,%2
%endif
%endmacro
%endif

; Intel runs in one flat segment.  Far calls are the same as near calls.
%macro  callfar 2
        extern     %1
        callc   %1,%2
%endmacro

; Return from an assembly-language function that will be called by C.
; Caller pops arguments
%macro  retc 1
	ret
%endmacro

