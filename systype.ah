\procname:
        .endm

        .macro  endp procname
        .endm

        .macro  cproc procname,distance
.ifne UNDERSCORE
_\procname:
.else
\procname:
.endif
        .endm

        .macro  cendp procname
        .endm

        .macro  publab procname
        .global \procname
        .endm

# call c function.  intel follows standard c conventions, and
# caller pops arguments.
        .macro  callc routine,nbytes
.ifne UNDERSCORE
        call    _\routine
.else
        call    \routine
.endif
.ifne \nbytes
        add     esp,\nbytes
.endif
        .endm

# intel runs in one flat segment.  far calls are the same as near calls.
        .macro  callfar routine,nbytes
        ext     \routine:near
        callc   \routine,\nbytes
        .endm

# return from an assembly-language function that will be called by c.
# caller pops arguments
        .macro  retc nbytes
	ret
        .endm

