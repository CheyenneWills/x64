#!/bin/bash --verbose
# Copyright 2012-2013 David Shields
#
# This program does a sanity test on spitbol to  verify that spitbol is able to compile itself.
# This is done by building the system three times, and comparing the generated assembly (.s)
# filesbl. Normally, all three assembly files wil be equal. However, if a new optimization is
# being introduced, the first two may differ, but the second and third should always agree.
#
rm tbol.*
echo "start 64-bit sanity test"
start 64-bit sanity test
make clean>/dev/null
cp	../bin/sbl_unix_64 tbol
make 	sbl=./tbol unix_64
gcc -Dunix_64 -m64    -c osint/*.c
./tbol  -u unix_64 lex.sbl
unix_64	target
  28129	minimal source lines
  12256	statements processed
  12317	target code lines produced
1095034	spitbol statements executed
      0	errors detected
2106280	free bytes
      0	execution time ms
./tbol  -r -u unix_64: -1=sbl.lex -2=sbl.tmp -3=sbl.err asm.sbl
options: unix_64:
unix_64	target
    rip	0
  25532	lines read
  12317	statements processed
  16077	target code lines produced
1528099	spitbol statements executed
    330	maximum err/erb number
     19	prc count
      0	errors detected
 429850	free words
      0	execution time ms
./tbol  -u unix_64 -1=sbl.err -2=err.s err.sbl
target: unix_64
input message length = 13413
output string size = 4322
savings = 9091
spitbol statements executed 480208
cat sys.asm err.s sbl.tmp >sbl.s
nasm -f elf64 -Dunix_64 -o sbl.o sbl.s
gcc -lm -Dunix_64 -m64   *.o -lm  -osbl 
mv sbl.lex tbol.lex.0
mv sbl.s tbol.s.0
cp sbl tbol
make 	sbl=./tbol  unix_64
gcc -Dunix_64 -m64    -c osint/*.c
./tbol  -u unix_64 lex.sbl
unix_64	target
  28129	minimal source lines
  12256	statements processed
  12317	target code lines produced
1095034	spitbol statements executed
      0	errors detected
2106280	free bytes
      0	execution time ms
./tbol  -r -u unix_64: -1=sbl.lex -2=sbl.tmp -3=sbl.err asm.sbl
options: unix_64:
unix_64	target
    rip	0
  25532	lines read
  12317	statements processed
  16077	target code lines produced
1528099	spitbol statements executed
    330	maximum err/erb number
     19	prc count
      0	errors detected
 429850	free words
      0	execution time ms
./tbol  -u unix_64 -1=sbl.err -2=err.s err.sbl
target: unix_64
input message length = 13413
output string size = 4322
savings = 9091
spitbol statements executed 480208
cat sys.asm err.s sbl.tmp >sbl.s
nasm -f elf64 -Dunix_64 -o sbl.o sbl.s
gcc -lm -Dunix_64 -m64   *.o -lm  -osbl 
mv sbl.lex tbol.lex.1
mv sbl.s tbol.s.1
cp sbl tbol
make 	sbl=./tbol  unix_64
gcc -Dunix_64 -m64    -c osint/*.c
./tbol  -u unix_64 lex.sbl
unix_64	target
  28129	minimal source lines
  12256	statements processed
  12317	target code lines produced
1095034	spitbol statements executed
      0	errors detected
2106280	free bytes
      0	execution time ms
./tbol  -r -u unix_64: -1=sbl.lex -2=sbl.tmp -3=sbl.err asm.sbl
options: unix_64:
unix_64	target
    rip	0
  25532	lines read
  12317	statements processed
  16077	target code lines produced
1528099	spitbol statements executed
    330	maximum err/erb number
     19	prc count
      0	errors detected
 429850	free words
      0	execution time ms
./tbol  -u unix_64 -1=sbl.err -2=err.s err.sbl
target: unix_64
input message length = 13413
output string size = 4322
savings = 9091
spitbol statements executed 480208
cat sys.asm err.s sbl.tmp >sbl.s
nasm -f elf64 -Dunix_64 -o sbl.o sbl.s
gcc -lm -Dunix_64 -m64   *.o -lm  -osbl 
mv sbl.lex tbol.lex.2
mv sbl.s tbol.s.2
echo "comparing generated .s files"
comparing generated .s files
diff tbol.s.1 tbol.s.2
1496c1496
< ; compressed spitbol error messages 01/04/35 21:12:32
---
> ; compressed spitbol error messages 06/03/64 10:09:20
echo "end sanity test"
end sanity test
